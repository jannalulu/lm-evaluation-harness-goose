{
  "results": {
    "lambada_openai": {
      "alias": "lambada_openai",
      "perplexity,none": 15.95867405752896,
      "perplexity_stderr,none": 0.5780200125359247,
      "acc,none": 0.43993790025228025,
      "acc_stderr,none": 0.006915536116983777
    },
    "piqa": {
      "alias": "piqa",
      "acc,none": 0.7584330794341676,
      "acc_stderr,none": 0.009986718001804479,
      "acc_norm,none": 0.7671381936887922,
      "acc_norm_stderr,none": 0.009861236071080751
    },
    "winogrande": {
      "alias": "winogrande",
      "acc,none": 0.5816890292028414,
      "acc_stderr,none": 0.013863669961195889
    }
  },
  "group_subtasks": {
    "lambada_openai": [],
    "piqa": [],
    "winogrande": []
  },
  "configs": {
    "lambada_openai": {
      "task": "lambada_openai",
      "tag": [
        "lambada"
      ],
      "dataset_path": "EleutherAI/lambada_openai",
      "dataset_name": "default",
      "dataset_kwargs": {
        "trust_remote_code": true
      },
      "test_split": "test",
      "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
      "doc_to_target": "{{' '+text.split(' ')[-1]}}",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "perplexity",
          "aggregation": "perplexity",
          "higher_is_better": false
        },
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "loglikelihood",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{text}}",
      "metadata": {
        "version": 1.0,
        "pretrained": "JunxiongWang/Mamba2InLlama_1"
      }
    },
    "piqa": {
      "task": "piqa",
      "dataset_path": "baber/piqa",
      "dataset_kwargs": {
        "trust_remote_code": true
      },
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "Question: {{goal}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": "{{[sol1, sol2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "goal",
      "metadata": {
        "version": 1.0,
        "pretrained": "JunxiongWang/Mamba2InLlama_1"
      }
    },
    "winogrande": {
      "task": "winogrande",
      "dataset_path": "winogrande",
      "dataset_name": "winogrande_xl",
      "dataset_kwargs": {
        "trust_remote_code": true
      },
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "def doc_to_text(doc):\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
      "doc_to_target": "def doc_to_target(doc):\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
      "unsafe_code": false,
      "doc_to_choice": "def doc_to_choice(doc):\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0,
        "pretrained": "JunxiongWang/Mamba2InLlama_1"
      }
    }
  },
  "versions": {
    "lambada_openai": 1.0,
    "piqa": 1.0,
    "winogrande": 1.0
  },
  "n-shot": {
    "lambada_openai": 0,
    "piqa": 0,
    "winogrande": 0
  },
  "higher_is_better": {
    "lambada_openai": {
      "perplexity": false,
      "acc": true
    },
    "piqa": {
      "acc": true,
      "acc_norm": true
    },
    "winogrande": {
      "acc": true
    }
  },
  "n-samples": {
    "winogrande": {
      "original": 1267,
      "effective": 1267
    },
    "piqa": {
      "original": 1838,
      "effective": 1838
    },
    "lambada_openai": {
      "original": 5153,
      "effective": 5153
    }
  },
  "config": {
    "model": "mamba2_hybrid",
    "model_args": "pretrained=JunxiongWang/Mamba2InLlama_1",
    "model_name": "JunxiongWang/Mamba2InLlama_1",
    "model_revision": null,
    "batch_size": "16",
    "device": "cuda",
    "batch_sizes": [],
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "f97135d",
  "date": 1742592618.9002972,
  "pretty_env_info": "'NoneType' object has no attribute 'splitlines'",
  "transformers_version": "4.50.0",
  "lm_eval_version": "0.4.8",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<|eot_id|>",
    "128009"
  ],
  "tokenizer_eos_token": [
    "<|eot_id|>",
    "128009"
  ],
  "tokenizer_bos_token": [
    "<|begin_of_text|>",
    "128000"
  ],
  "eot_token_id": 128009,
  "max_length": 2048,
  "task_hashes": {},
  "model_source": "mamba2_hybrid",
  "model_name": "JunxiongWang/Mamba2InLlama_1",
  "model_name_sanitized": "JunxiongWang__Mamba2InLlama_1",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": null,
  "chat_template_sha": null,
  "start_time": 1894947.948289955,
  "end_time": 1895194.110999637,
  "total_evaluation_time_seconds": "246.1627096820157"
}