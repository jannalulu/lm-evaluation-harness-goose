{
  "results": {
    "humaneval_instruct": {
      "alias": "humaneval_instruct",
      "pass@1,create_test": 0.0,
      "pass@1_stderr,create_test": 0.0
    }
  },
  "group_subtasks": {
    "humaneval_instruct": []
  },
  "configs": {
    "humaneval_instruct": {
      "task": "humaneval_instruct",
      "dataset_path": "openai/openai_humaneval",
      "test_split": "test",
      "doc_to_text": "Write a solution to the following problem and make sure that it passes the tests:\n```{{prompt}}",
      "doc_to_target": "{{test}}\ncheck({{entry_point}})",
      "unsafe_code": true,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "def pass_at_k(references: list[str], predictions: list[list[str]], k: list[int] = None):\n    global compute_\n    assert k is not None\n    if isinstance(k, int):\n        k = [k]\n    res = compute_.compute(\n        references=references,\n        predictions=predictions,\n        k=k,\n    )\n    return res[0]\n",
          "aggregation": "mean",
          "higher_is_better": true,
          "k": [
            1
          ]
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "\nclass",
          "\ndef",
          "\n#",
          "\nif",
          "\nprint"
        ],
        "max_gen_toks": 1024,
        "do_sample": false
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "create_test",
          "filter": [
            {
              "function": "custom",
              "filter_fn": "<function build_predictions_instruct at 0x7683573a44c0>"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "gen_prefix": "Here is the completed function:\n```python\n{{prompt}}\n",
      "metadata": {
        "version": 2.0,
        "pretrained": "TRI-ML/mistral-supra",
        "trust_remote_code": true
      }
    }
  },
  "versions": {
    "humaneval_instruct": 2.0
  },
  "n-shot": {
    "humaneval_instruct": 0
  },
  "higher_is_better": {
    "humaneval_instruct": {
      "pass_at_k": true
    }
  },
  "n-samples": {
    "humaneval_instruct": {
      "original": 164,
      "effective": 164
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=TRI-ML/mistral-supra,trust_remote_code=True",
    "model_num_parameters": 7812321280,
    "model_dtype": "torch.float32",
    "model_revision": "main",
    "model_sha": "819d065e4ad1ae6020f71390257f03fa465303d7",
    "batch_size": "16",
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "776e1a4",
  "date": 1748824105.909378,
  "pretty_env_info": "'NoneType' object has no attribute 'splitlines'",
  "transformers_version": "4.49.0",
  "lm_eval_version": "0.4.8",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<unk>",
    "0"
  ],
  "tokenizer_eos_token": [
    "</s>",
    "2"
  ],
  "tokenizer_bos_token": [
    "<s>",
    "1"
  ],
  "eot_token_id": 2,
  "max_length": 2048,
  "task_hashes": {},
  "model_source": "hf",
  "model_name": "TRI-ML/mistral-supra",
  "model_name_sanitized": "TRI-ML__mistral-supra",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": "{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content'] %}\n    {%- set loop_messages = messages[1:] %}\n{%- else %}\n    {%- set loop_messages = messages %}\n{%- endif %}\n\n{{- bos_token }}\n{%- for message in loop_messages %}\n    {%- if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}\n        {{- raise_exception('After the optional system message, conversation roles must alternate user/assistant/user/assistant/...') }}\n    {%- endif %}\n    {%- if message['role'] == 'user' %}\n        {%- if loop.first and system_message is defined %}\n            {{- ' [INST] ' + system_message + '\\n\\n' + message['content'] + ' [/INST]' }}\n        {%- else %}\n            {{- ' [INST] ' + message['content'] + ' [/INST]' }}\n        {%- endif %}\n    {%- elif message['role'] == 'assistant' %}\n        {{- ' ' + message['content'] + eos_token}}\n    {%- else %}\n        {{- raise_exception('Only user and assistant roles are supported, with the exception of an initial optional system message!') }}\n    {%- endif %}\n{%- endfor %}\n",
  "chat_template_sha": "796853172235ab3aaa4810013ddfe2eab481bda3306dad4f700c00d436eed596",
  "start_time": 15498935.337411527,
  "end_time": 15499845.99938042,
  "total_evaluation_time_seconds": "910.6619688943028"
}